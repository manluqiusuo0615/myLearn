enum的全称为enumeration
JDK1.5引入了一个全新类型的"类"----枚举类型
仅仅相当于和类和接口是一个级别上的
为此引入了一个新关键字enum
创建枚举类型要使用enum关键字,
隐含了所创建的类型都是
java.lang.Enum类的子类(java.lang.Enum是一个抽象类).
枚举类型符合通用模式
Class Enum<E extends Enum<E>>,
而E表示枚举类型的名称.
枚举类型的每一个值都将映射到
protected Enum(String name,int ordinal)构造函数中,
在这里,每个值的名称都被转换成一个字符串,
并且序数设置表示了此设置被创建的顺序。

枚举类型还提供了两个有用的静态方法
values()和valueOf()
我们可以很方便的使用他们

我们在定义枚举类型的时候,本质上就是在定义一个类别
只不过很多细节由编译器帮我们完成了所以某些
程度上,enum关键字的作用就像class或interface

当我们使用"enum"定义枚举类型时,实质上定义出来的
类型继承自java.lang.Enum类型,
而每个枚举的成员
其实就是你定义的枚举类型的一个实例(Instance)
他们都是被预设为final,所以你无法改变他们,他们也是
static成员,所以你可以通过类型名称直接使用他们
当然最重要的是,他们都是公开的(public)
即枚举中的每个成员都是public static final 类型实例

枚举的本源就是说,在编译的时候,枚举就已经确定好了
到底有几个实例对象,这些实例对象的名称都是什么

单元素的枚举类型已经成为实现Singleton(单例)的最佳方法

枚举类型的类决定了它不能像一个普通对象一样可以随便生成

枚举是一个离散的概念
而且规定了这个类,只能有这么几个实例
枚举最本质的特性就是：这个类型,它的对象,实例的个数已经完全确定了
你无法在运行的时候再去生成,只能在编译的时候就确定好
然后我们就只能使用这个类型有限的几个实例
供我们去调用去使用











